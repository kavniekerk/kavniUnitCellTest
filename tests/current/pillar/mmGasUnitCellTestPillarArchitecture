/*
//----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// PILLAR ARCHITECTURE

// For m In {0:Number_Units_x}
//  For n In {0:Number_Units_y}

//----------------------------------------------------------
// pillar 1f (full pillar)

//----------------------------------------------------------
// Center

// pc1_1f~{m}~{n} = newp; Point(pc1_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tlgC,lcDielectricpillar};
// pc2_1f~{m}~{n} = newp; Point(pc2_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tltC,lcDielectricpillar};
// pc3_1f~{m}~{n} = newp; Point(pc3_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tteD1,lcDielectricpillar};
// pc4_1f~{m}~{n} = newp; Point(pc4_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, ttD,lcDielectricpillar};

//----------------------------------------------------------
// Dielectric pillar

//----------------------------------------------------------
// Top

// pth1_1f~{m}~{n} = newp; Point(pth1_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a-1*(r0), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, ttD,lcDielectricpillar};
// pth2_1f~{m}~{n} = newp; Point(pth2_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a-1*(r0), ttD,lcDielectricpillar};
// pth3_1f~{m}~{n} = newp; Point(pth3_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a+1*(r0), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, ttD,lcDielectricpillar};
// pth4_1f~{m}~{n} = newp; Point(pth4_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a+1*(r0), ttD,lcDielectricpillar};

// cth1_1f~{m}~{n} = newc; Circle(cth1_1f~{m}~{n}) = {pth1_1f~{m}~{n}, pc4_1f~{m}~{n}, pth2_1f~{m}~{n}};
// cth2_1f~{m}~{n} = newc; Circle(cth2_1f~{m}~{n}) = {pth2_1f~{m}~{n}, pc4_1f~{m}~{n}, pth3_1f~{m}~{n}};
// cth3_1f~{m}~{n} = newc; Circle(cth3_1f~{m}~{n}) = {pth3_1f~{m}~{n}, pc4_1f~{m}~{n}, pth4_1f~{m}~{n}};
// cth4_1f~{m}~{n} = newc; Circle(cth4_1f~{m}~{n}) = {pth4_1f~{m}~{n}, pc4_1f~{m}~{n}, pth1_1f~{m}~{n}};

//----------------------------------------------------------
// Bottom

// pbh1_1f~{m}~{n} = newp; Point(pbh1_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a-1*(r0), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tlgC,lcDielectricpillar};
// pbh2_1f~{m}~{n} = newp; Point(pbh2_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a-1*(r0), tlgC,lcDielectricpillar};
// pbh3_1f~{m}~{n} = newp; Point(pbh3_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a+1*(r0), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tlgC,lcDielectricpillar};
// pbh4_1f~{m}~{n} = newp; Point(pbh4_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a+1*(r0), tlgC,lcDielectricpillar};

//----------------------------------------------------------
// Upper Etching

//----------------------------------------------------------
// Top

// ptue1_1f~{m}~{n} = newp; Point(ptue1_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a-1*(r0+r1), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tteD1,lcEtchingpillar};
// ptue2_1f~{m}~{n} = newp; Point(ptue2_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a-1*(r0+r1), tteD1,lcEtchingpillar};
// ptue3_1f~{m}~{n} = newp; Point(ptue3_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a+1*(r0+r1), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tteD1,lcEtchingpillar};
// ptue4_1f~{m}~{n} = newp; Point(ptue4_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a+1*(r0+r1), tteD1,lcEtchingpillar};

//----------------------------------------------------------
// Middle Top

// pttue1_1f~{m}~{n} = newp; Point(pttue1_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a-1*(r0+0.5*r1), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tteD2,lcEtchingpillar};
// pttue2_1f~{m}~{n} = newp; Point(pttue2_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a,pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a-1*(r0+0.5*r1), tteD2,lcEtchingpillar};
// pttue3_1f~{m}~{n} = newp; Point(pttue3_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a+1*(r0+0.5*r1), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tteD2,lcEtchingpillar};
// pttue4_1f~{m}~{n} = newp; Point(pttue4_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a,pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a+1*(r0+0.5*r1), tteD2,lcEtchingpillar};

//----------------------------------------------------------
// Circular boundary

// ctue1_1f~{m}~{n} = newc; Circle(ctue1_1f~{m}~{n}) = {ptue1_1f~{m}~{n}, pc3_1f~{m}~{n}, ptue2_1f~{m}~{n}};
// ctue2_1f~{m}~{n} = newc; Circle(ctue2_1f~{m}~{n}) = {ptue2_1f~{m}~{n}, pc3_1f~{m}~{n}, ptue3_1f~{m}~{n}};
// ctue3_1f~{m}~{n} = newc; Circle(ctue3_1f~{m}~{n}) = {ptue3_1f~{m}~{n}, pc3_1f~{m}~{n}, ptue4_1f~{m}~{n}};
// ctue4_1f~{m}~{n} = newc; Circle(ctue4_1f~{m}~{n}) = {ptue4_1f~{m}~{n}, pc3_1f~{m}~{n}, ptue1_1f~{m}~{n}};

// lue1_1f~{m}~{n} = newl; Line(lue1_1f~{m}~{n}) = {ptue1_1f~{m}~{n}, pth1_1f~{m}~{n}};
// Transfinite Line { lue1_1f~{m}~{n} } = lue1_1f~{m}~{n};
// lue2_1f~{m}~{n} = newl; Line(lue2_1f~{m}~{n}) = {ptue2_1f~{m}~{n}, pth2_1f~{m}~{n}};
// Transfinite Line { lue2_1f~{m}~{n} } = lue2_1f~{m}~{n};
// lue3_1f~{m}~{n} = newl; Line(lue3_1f~{m}~{n}) = {ptue3_1f~{m}~{n}, pth3_1f~{m}~{n}};
// Transfinite Line { lue3_1f~{m}~{n} } = lue3_1f~{m}~{n};
// lue4_1f~{m}~{n} = newl; Line(lue4_1f~{m}~{n}) = {ptue4_1f~{m}~{n}, pth4_1f~{m}~{n}};
// Transfinite Line { lue4_1f~{m}~{n} } = lue4_1f~{m}~{n};

//----------------------------------------------------------
// Lower Etching

//----------------------------------------------------------
// Top

// ptle1_1f~{m}~{n} = newp; Point(ptle1_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a-1*(r0+r1), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tltC,lcEtchingpillar}; // +r1
// ptle2_1f~{m}~{n} = newp; Point(ptle2_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a-1*(r0+r1), tltC,lcEtchingpillar}; // +r1
// ptle3_1f~{m}~{n} = newp; Point(ptle3_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a+1*(r0+r1), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tltC,lcEtchingpillar}; // +r1
// ptle4_1f~{m}~{n} = newp; Point(ptle4_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a+1*(r0+r1), tltC,lcEtchingpillar}; // +r1

//----------------------------------------------------------
// Bottom

// pble1_1f~{m}~{n} = newp; Point(pble1_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a-1*(r0+r1), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tlgC,lcEtchingpillar}; // +r1
// pble2_1f~{m}~{n} = newp; Point(pble2_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a-1*(r0+r1), tlgC,lcEtchingpillar}; // +r1
// pble3_1f~{m}~{n} = newp; Point(pble3_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a+1*(r0+r1), pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a, tlgC,lcEtchingpillar}; // +r1
// pble4_1f~{m}~{n} = newp; Point(pble4_1f~{m}~{n}) = {pil_c_x+geo_f_x*a/2+pil_f_x*geo_f_x*m*a, pil_c_y+geo_f_y*a/2+pil_f_y*geo_f_y*n*a+1*(r0+r1), tlgC,lcEtchingpillar}; // +r1

//----------------------------------------------------------
// Circular boundaries

// ctle1_1f~{m}~{n} = newc; Circle(ctle1_1f~{m}~{n}) = {ptle1_1f~{m}~{n}, pc2_1f~{m}~{n}, ptle2_1f~{m}~{n}};
// ctle2_1f~{m}~{n} = newc; Circle(ctle2_1f~{m}~{n}) = {ptle2_1f~{m}~{n}, pc2_1f~{m}~{n}, ptle3_1f~{m}~{n}};
// ctle3_1f~{m}~{n} = newc; Circle(ctle3_1f~{m}~{n}) = {ptle3_1f~{m}~{n}, pc2_1f~{m}~{n}, ptle4_1f~{m}~{n}};
// ctle4_1f~{m}~{n} = newc; Circle(ctle4_1f~{m}~{n}) = {ptle4_1f~{m}~{n}, pc2_1f~{m}~{n}, ptle1_1f~{m}~{n}};

// cble1_1f~{m}~{n} = newc; Circle(cble1_1f~{m}~{n}) = {pble1_1f~{m}~{n}, pc1_1f~{m}~{n}, pble2_1f~{m}~{n}};
// cble2_1f~{m}~{n} = newc; Circle(cble2_1f~{m}~{n}) = {pble2_1f~{m}~{n}, pc1_1f~{m}~{n}, pble3_1f~{m}~{n}};
// cble3_1f~{m}~{n} = newc; Circle(cble3_1f~{m}~{n}) = {pble3_1f~{m}~{n}, pc1_1f~{m}~{n}, pble4_1f~{m}~{n}};
// cble4_1f~{m}~{n} = newc; Circle(cble4_1f~{m}~{n}) = {pble4_1f~{m}~{n}, pc1_1f~{m}~{n}, pble1_1f~{m}~{n}};

// lle1_1f~{m}~{n} = newl; Line(lle1_1f~{m}~{n}) = {ptle1_1f~{m}~{n}, pble1_1f~{m}~{n}};
// Transfinite Line { lle1_1f~{m}~{n} } = lle1_1f~{m}~{n};
// lle2_1f~{m}~{n} = newl; Line(lle2_1f~{m}~{n}) = {ptle2_1f~{m}~{n}, pble2_1f~{m}~{n}};
// Transfinite Line { lle2_1f~{m}~{n} } = lle2_1f~{m}~{n};
// lle3_1f~{m}~{n} = newl; Line(lle3_1f~{m}~{n}) = {ptle3_1f~{m}~{n}, pble3_1f~{m}~{n}};
// Transfinite Line { lle3_1f~{m}~{n} } = lle3_1f~{m}~{n};
// lle4_1f~{m}~{n} = newl; Line(lle4_1f~{m}~{n}) = {ptle4_1f~{m}~{n}, pble4_1f~{m}~{n}};
// Transfinite Line { lle4_1f~{m}~{n} } = lle4_1f~{m}~{n};

//----------------------------------------------------------
// Lines connecting top and bottom

// lconn5_1f~{m}~{n} = newl; Line(lconn5_1f~{m}~{n}) = {ptle1_1f~{m}~{n}, ptue1_1f~{m}~{n}}; // pth1_1f~{m}~{n}
// Transfinite Line { lconn5_1f~{m}~{n} } = lconn5_1f~{m}~{n};
// lconn6_1f~{m}~{n} = newl; Line(lconn6_1f~{m}~{n}) = {ptle2_1f~{m}~{n}, ptue2_1f~{m}~{n}}; // pth2_1f~{m}~{n} 
// Transfinite Line { lconn6_1f~{m}~{n} } = lconn6_1f~{m}~{n};
// lconn7_1f~{m}~{n} = newl; Line(lconn7_1f~{m}~{n}) = {ptle3_1f~{m}~{n}, ptue3_1f~{m}~{n}}; // pth3_1f~{m}~{n}
// Transfinite Line { lconn7_1f~{m}~{n} } = lconn7_1f~{m}~{n};
// lconn8_1f~{m}~{n} = newl; Line(lconn8_1f~{m}~{n}) = {ptle4_1f~{m}~{n}, ptue4_1f~{m}~{n}}; // pth4_1f~{m}~{n}
// Transfinite Line { lconn8_1f~{m}~{n} } = lconn8_1f~{m}~{n};

//----------------------------------------------------------
// Copper planes

//----------------------------------------------------------
// Connect the upper and lower points with lines to form the plate

// lcpbib17~{m}~{n} = newl; Line(lcpbib17~{m}~{n}) = {ptle1_1f~{m}~{n}, pble1_1f~{m}~{n}};
// Transfinite Line { lcpbib17~{m}~{n} } = lcpbib17~{m}~{n};
// lcpbib18~{m}~{n} = newl; Line(lcpbib18~{m}~{n}) = {ptle2_1f~{m}~{n}, pble2_1f~{m}~{n}};
// Transfinite Line { lcpbib18~{m}~{n} } = lcpbib18~{m}~{n};
// lcpbib19~{m}~{n} = newl; Line(lcpbib19~{m}~{n}) = {ptle3_1f~{m}~{n}, pble3_1f~{m}~{n}};
// Transfinite Line { lcpbib19~{m}~{n} } = lcpbib19~{m}~{n};
// lcpbib20~{m}~{n} = newl; Line(lcpbib20~{m}~{n}) = {ptle4_1f~{m}~{n}, pble4_1f~{m}~{n}};
// Transfinite Line { lcpbib20~{m}~{n} } = lcpbib20~{m}~{n};

//----------------------------------------------------------
// Define surfaces

//----------------------------------------------------------
// Surfaces to which voltages will be applied

// llcp_low_rim_1a~{m}~{n} = newreg; Line Loop(llcp_low_rim_1a~{m}~{n}) = { lle1_1f~{m}~{n}, cble1_1f~{m}~{n}, -lle2_1f~{m}~{n}, -ctle1_1f~{m}~{n} };
// llcp_low_rim_1b~{m}~{n} = newreg; Line Loop(llcp_low_rim_1b~{m}~{n}) = { lle2_1f~{m}~{n}, cble2_1f~{m}~{n}, -lle3_1f~{m}~{n}, -ctle2_1f~{m}~{n} };
// llcp_low_rim_1c~{m}~{n} = newreg; Line Loop(llcp_low_rim_1c~{m}~{n}) = { lle3_1f~{m}~{n}, cble3_1f~{m}~{n}, -lle4_1f~{m}~{n}, -ctle3_1f~{m}~{n} };
// llcp_low_rim_1d~{m}~{n} = newreg; Line Loop(llcp_low_rim_1d~{m}~{n}) = { lle4_1f~{m}~{n}, cble4_1f~{m}~{n}, -lle1_1f~{m}~{n}, -ctle4_1f~{m}~{n} };

//----------------------------------------------------------
// Surfaces to which voltages will be applied

// ps_lower_cp1 = newreg; Surface(ps_lower_cp1) = { llcp_low_rim_1a~{m}~{n} };
// surf_lower_cp1[] += ps_lower_cp1;
// ps_lower_cp2 = newreg; Surface(ps_lower_cp2) = { llcp_low_rim_1b~{m}~{n} };
// surf_lower_cp2[] += ps_lower_cp2;
// ps_lower_cp3 = newreg; Surface(ps_lower_cp3) = { llcp_low_rim_1c~{m}~{n} };
// surf_lower_cp3[] += ps_lower_cp3;
// ps_lower_cp4 = newreg; Surface(ps_lower_cp4) = { llcp_low_rim_1d~{m}~{n} };
// surf_lower_cp4[] += ps_lower_cp4;

//----------------------------------------------------------
// Gas & dielectric surfaces

// ll_cyl_dielectric1b~{m}~{n} = newreg; Line Loop(ll_cyl_dielectric1b~{m}~{n}) = { lconn5_1f~{m}~{n}, ctue1_1f~{m}~{n}, -lconn6_1f~{m}~{n}, -ctle1_1f~{m}~{n} }; // cth1_1f~{m}~{n},
// ps_cyl_dielectric1 = newreg; Surface(ps_cyl_dielectric1) = { ll_cyl_dielectric1b~{m}~{n} };
// surf_cyl_dielectric1[] += ps_cyl_dielectric1;
// ll_cyl_dielectric2b~{m}~{n} = newreg; Line Loop(ll_cyl_dielectric2b~{m}~{n}) = { lconn6_1f~{m}~{n}, ctue2_1f~{m}~{n}, -lconn7_1f~{m}~{n}, -ctle2_1f~{m}~{n} }; // cth2_1f~{m}~{n},
// ps_cyl_dielectric2 = newreg; Surface(ps_cyl_dielectric2) = { ll_cyl_dielectric2b~{m}~{n} };
// surf_cyl_dielectric2[] += ps_cyl_dielectric2;
// ll_cyl_dielectric3b~{m}~{n} = newreg; Line Loop(ll_cyl_dielectric3b~{m}~{n}) = { lconn7_1f~{m}~{n}, ctue3_1f~{m}~{n}, -lconn8_1f~{m}~{n}, -ctle3_1f~{m}~{n} }; // cth3_1f~{m}~{n},
// ps_cyl_dielectric3 = newreg; Surface(ps_cyl_dielectric3) = { ll_cyl_dielectric3b~{m}~{n} };
// surf_cyl_dielectric3[] += ps_cyl_dielectric3;
// ll_cyl_dielectric4b~{m}~{n} = newreg; Line Loop(ll_cyl_dielectric4b~{m}~{n}) = { lconn8_1f~{m}~{n}, ctue4_1f~{m}~{n}, -lconn5_1f~{m}~{n}, -ctle4_1f~{m}~{n} }; // cth4_1f~{m}~{n},
// ps_cyl_dielectric4 = newreg; Surface(ps_cyl_dielectric4) = { ll_cyl_dielectric4b~{m}~{n} };
// surf_cyl_dielectric4[] += ps_cyl_dielectric4;

// ll_top_gas2~{m}~{n} = newreg; Line Loop( ll_top_gas2~{m}~{n} ) = { cth1_1f~{m}~{n}, cth2_1f~{m}~{n}, cth3_1f~{m}~{n}, cth4_1f~{m}~{n} };
// ps_top_gas1 = news; Plane Surface(news) = { ll_top_gas2~{m}~{n} };
// surf_top_gas1[] += ps_top_gas1;
// Transfinite Surface { surf_top_gas1[] };
// Recombine Surface { surf_top_gas1[] };

// ll_top_gas3~{m}~{n} = newreg; Line Loop( ll_top_gas3~{m}~{n} ) = { lue1_1f~{m}~{n}, cth1_1f~{m}~{n}, -lue2_1f~{m}~{n}, -ctue1_1f~{m}~{n} };
// ps_top_gas2 = news; Surface(news) = { ll_top_gas3~{m}~{n} };
// surf_top_gas2[] += ps_top_gas2;
// Transfinite Surface { surf_top_gas2[] };
// Recombine Surface { surf_top_gas2[] };

// ll_top_gas4~{m}~{n} = newreg; Line Loop( ll_top_gas4~{m}~{n} ) = { lue2_1f~{m}~{n}, cth2_1f~{m}~{n}, -lue3_1f~{m}~{n}, -ctue2_1f~{m}~{n}  };
// ps_top_gas3 = news; Surface(news) = { ll_top_gas4~{m}~{n} };
// surf_top_gas3[] += ps_top_gas3;
// Transfinite Surface { surf_top_gas3[] };
// Recombine Surface { surf_top_gas3[] };

// ll_top_gas5~{m}~{n} = newreg; Line Loop( ll_top_gas5~{m}~{n} ) = { lue3_1f~{m}~{n}, cth3_1f~{m}~{n}, -lue4_1f~{m}~{n}, -ctue3_1f~{m}~{n} };
// ps_top_gas4 = news; Surface(news) = { ll_top_gas5~{m}~{n} };
// surf_top_gas4[] += ps_top_gas4;
// Transfinite Surface { surf_top_gas4[] };
// Recombine Surface { surf_top_gas4[] };

// ll_top_gas6~{m}~{n} = newreg; Line Loop( ll_top_gas6~{m}~{n} ) = { lue4_1f~{m}~{n}, cth4_1f~{m}~{n}, -lue1_1f~{m}~{n}, -ctue4_1f~{m}~{n} };
// ps_top_gas5 = news; Surface(news) = { ll_top_gas6~{m}~{n} };
// surf_top_gas5[] += ps_top_gas5;
// Transfinite Surface { surf_top_gas5[] };
// Recombine Surface { surf_top_gas5[] };

// ll_top_cp1a1 = newreg; Line Loop( ll_top_cp1a1 ) = { ctle1_1f~{m}~{n}, ctle2_1f~{m}~{n}, ctle3_1f~{m}~{n}, ctle4_1f~{m}~{n} };
// ll_top_cp2a[] += { ll_top_cp1a1 };

// ll_bottom_cp1a1 = newreg; Line Loop( ll_bottom_cp1a1 ) = { cble1_1f~{m}~{n}, cble2_1f~{m}~{n}, cble3_1f~{m}~{n}, cble4_1f~{m}~{n} };
// ll_bottom_cp2a[] += { ll_bottom_cp1a1 };

//   Delete { Point { pc1_1f~{m}~{n} }; }
//   Delete { Point { pc2_1f~{m}~{n} }; }
//   Delete { Point { pc3_1f~{m}~{n} }; }
//   Delete { Point { pc4_1f~{m}~{n} }; }

// EndFor
// EndFor
*/